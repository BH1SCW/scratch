Design notes
============

- Instrumentation must not hide it's own overhead
-- update control parameters only when explicitly demanded
-- update log variables only when explicity demanded

- Set optimal QoS
-- High reliability guarantees for control parameters
-- High throughput and optimal network utilisation for log variables
-- provide xml file to set QoS parameters

- Update must include a timestamp
- See Robotic Platform TypeInfo and ObjectManager classes for dynamic creation of objects

Development notes
=================
On creating data readers for user defined types
- In order to create a DataReader you need to first have a Topic.
- To create the Topic you need to have both topic_name and type_name of a previously-registered type.
- register_type registers a type (or DynamicType) on a participant
- get DynamicType for published data types from listening to PublicationBuiltinTopicData
- use DynamicData to instantiate data samples of a DynamicType

DynamicData: https://community.rti.com/static/documentation/connext-dds/5.2.3/doc/api/connext_dds/api_cpp2/classdds_1_1core_1_1xtypes_1_1DynamicData.html
DynamicType: https://community.rti.com/static/documentation/connext-dds/5.2.3/doc/api/connext_dds/api_cpp2/classdds_1_1core_1_1xtypes_1_1DynamicType.html

- Q: Can we just send primitive types directly?
https://community.rti.com/static/documentation/connext-dds/5.2.3/doc/api/connext_dds/api_cpp2/classdds_1_1core_1_1xtypes_1_1PrimitiveType.html

